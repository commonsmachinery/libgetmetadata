{"name":"libgetmetadata","tagline":"Extracting image metadata from web pages and other sources","body":"libgetmetadata\r\n==============\r\n\r\nlibgetmetadata aims to simplify extracting metadata about creative works\r\nfrom webpages and other sources. Only images are supported at the moment.\r\n\r\nSupported metadata sources\r\n--------------------------\r\n\r\n* RDFa metadata.\r\n* Open Graph.\r\n* oEmbed.\r\n\r\nBasic usage\r\n-----------\r\n\r\n    var getMetadata = require(\"./libgetmetadata\").getMetadata;\r\n    getMetadata(\"http://example.com\", null, null, callback);\r\n    // or\r\n    getMetadata(document, null, null, callback);\r\n\r\nWhere callback is a function with the signature `function(error, result)`.\r\nIt can be defined as follows:\r\n\r\n    function callback(error, metadata) {\r\n        console.log(metadata.graph);\r\n        // or\r\n        console.log(metadata.graph[metadata.mainSubject]);\r\n    }\r\n\r\nThe primary function exported by libgetmetadata is\r\n`getMetadata(source, options, rules, callback)`, where\r\n\r\n* `source` - can be URI or document.\r\n* `options` - can contain custom processor for DOM and method for getting published metadata.\r\n* `rules` - rules for scraping metadata, usually site-specific.\r\n* `callback` - function with signature `function(error, result)` to be called on success or failure.\r\n\r\nSite rules\r\n----------\r\n\r\nRules should be an object (typically stored as JSON) for fine-tuning\r\nmetadata lookup on specific sites. Meaningful properties are:\r\n\r\n- `source`: an array containing any of 'og', 'rdfa', 'oembed'. These sources will be used to build the graph.\r\n- `oembed`: oEmbed fetching rules defined as follows:\r\n    * `type`: \"json\" or \"xml\";\r\n    * `endpoint`: base URL for oEmbed endpoint\r\n    * `map`: a dictionary mapping oEmbed properties to values in the form `{property: \"...\", type: \"...\"}`, where `property` is the qualified property name property and `type` is either \"uri\" or \"literal\".\r\n- `mainElement`: an array of CSS selectors to look for main element.\r\n- `rewriteMainSubject`: array of lookup patterns for main element subject. Required if mainElement is specified and should include one or more of the following strings:\r\n    * \"oembed:...\" - parameter from oembed data, typically \"web_page\".\r\n    * \"rdfa:...\" - use subject from RDFa triples with this predicate.\r\n    * \"og:...\" - use subject from OpenGraph triples with this predicate.\r\n    * \"xpath:...\" - use subject found using an XPath expression.\r\n\r\nFor example:\r\n\r\n    {\r\n        \"source\": [\"oembed\", \"rdfa\"],\r\n\r\n        \"oembed\": {\r\n            \"type\": \"json\",\r\n            \"endpoint\": \"http://example.com/oembed\"\r\n        },\r\n\r\n        \"mainElement\": [\r\n            \"img.main\"\r\n        ],\r\n\r\n        \"rewriteMainSubject\": [\r\n            \"xpath:/html/head/link[@rel='canonical']/@href\"\r\n        ]\r\n    }\r\n\r\nUsing metadata\r\n--------------\r\n\r\nThe metadata object passed to callback has the following properties:\r\n\r\n* `graph`: Complete graph in RDF/JSON form: `{s: p: [o: {...}]}`\r\n* `mainSubject`: Main element subject, if any.\r\n* `properties`: Core properties, see below for details.\r\n\r\nRaw metadata can be accessed through properties `rdfa`, `og`, `oembed`.\r\n\r\nCore properties\r\n---------------\r\n\r\nlibgetmetadata does basic mapping of RDF metadata to a set of core properties\r\ndefined in [W3C Ontology for Media Resources (OMR)](http://www.w3.org/TR/mediaont-10/).\r\n\r\nThe core properties are available through `metadata.properties[subject]` and\r\ninclude:\r\n\r\n* title - title of the work.\r\n* identifier - URL pointing to the work web page\r\n* creator - author of the work.\r\n* policy - license URL.\r\n\r\nRunning tests\r\n-------------\r\n\r\nRunning the test suite requires Mocha framework. Run it with `make test`.\r\n\r\nLicense\r\n-------\r\n\r\nCopyright 2014 Commons Machinery http://commonsmachinery.se/\r\n\r\nDistributed under an GPLv2 license, please see LICENSE in the top dir.\r\n\r\nContact: dev@commonsmachinery.se\r\n","google":"UA-38814645-3","note":"Don't delete this file! It's used internally to help with page regeneration."}